{"version":3,"sources":["reportWebVitals.js","app/utils/validator.js","app/api/fake.api/professions.api.js","app/api/fake.api/user.api.js","app/api/fake.api/qualities.api.js","app/api/fake.api/comments.api.js","app/api/index.js","app/components/common/form/textField.jsx","app/components/common/form/selectField.jsx","app/components/common/form/radioField.jsx","app/components/common/form/multiSelectField.jsx","app/components/common/backButton.jsx","app/components/page/editUserPage/index.js","app/components/page/editUserPage/editUserPage.jsx","service/localStorage.service.js","service/http.service.js","service/user.service.js","app/hooks/useAuth.jsx","app/components/ui/userCard.jsx","app/components/ui/qualities/quality.jsx","service/quality.service.js","app/hooks/useQualities.jsx","app/components/ui/qualities/index.js","app/components/ui/qualities/qualitiesList.jsx","app/components/ui/qualitiesCard.jsx","app/components/ui/meetingsCard.jsx","app/utils/displayDate.js","app/hooks/useUsers.jsx","app/components/common/comments/comment.jsx","app/components/common/comments/commentsList.jsx","app/components/common/form/textAreaField.jsx","app/components/common/comments/addCommentForm.jsx","app/components/common/comments/index.js","service/comment.service.js","app/hooks/useComments.jsx","app/components/ui/comments.jsx","app/components/page/userPage/index.js","app/components/page/userPage/userPage.jsx","app/components/common/pagination.jsx","app/components/common/groupList.jsx","app/components/ui/searchStatus.jsx","app/components/common/bookmark.jsx","app/components/common/table/tableBody.jsx","app/components/common/table/tableHeader.jsx","app/components/common/table/index.js","app/components/common/table/table.jsx","service/profession.service.js","app/hooks/useProfession.jsx","app/components/ui/profession.jsx","app/components/ui/usersTable.jsx","app/components/page/usersListPage/index.js","app/components/page/usersListPage/usersListPage.jsx","app/utils/paginate.js","app/layouts/users.jsx","app/components/common/form/checkBoxField.jsx","app/components/ui/loginForm.jsx","app/components/ui/registerForm.jsx","app/layouts/login.jsx","app/utils/mockData.js","app/layouts/main.jsx","app/components/ui/navProfile.jsx","app/components/ui/navBar.jsx","app/protectedRoute.jsx","app/layouts/logOut.jsx","app/App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","validator","data","config","errors","validate","validateMethod","statusValidate","trim","test","length","value","message","fieldName","error","professionsObject","doctor","_id","name","waiter","physics","engineer","actor","cook","fetchAll","Promise","resolve","window","setTimeout","qualities","tedious","color","strange","buller","alcoholic","handsome","uncertain","users","email","sex","profession","professions","completedMeetings","rate","bookmark","localStorage","getItem","setItem","JSON","stringify","parse","getById","id","find","user","update","userIndex","findIndex","u","_objectSpread","comments","userId","pageId","content","created_at","API","fetchCommentsForUser","filter","c","add","newComment","Date","now","Math","random","toString","substr","push","remove","newComments","x","console","log","TextField","label","type","onChange","_useState","useState","_useState2","_slicedToArray","showPassword","setShowPassword","_jsxs","className","children","_jsx","htmlFor","_ref2","target","onClick","prevState","defaultProps","SelectField","defaultOption","options","optionsArray","Array","isArray","Object","values","disabled","map","option","RadioField","handleChange","checked","MultiSelectField","defaultValue","Select","isMulti","closeMenuOnSelect","classNamePrefix","BackHistoryButton","history","useHistory","goBack","EditUserPage","useParams","isLoading","setIsLoading","_useState3","_useState4","setData","_useState5","_useState6","setProfession","_useState7","_useState8","setQualities","_useState9","_useState10","setErrors","getProfessionById","_step","_iterator","_createForOfIteratorHelper","s","n","done","prof","err","e","f","getQualities","elements","_step2","qualitiesArray","_iterator2","elem","quality","transformData","qual","useEffect","api","_objectWithoutProperties","_excluded","professionsList","keys","professionName","qualitiesList","optionName","validatorConfig","isRequired","isEmail","_defineProperty","isValid","onSubmit","preventDefault","concat","TOKEN_KEY","REFRESH_KEY","EXPIRES_KEY","USER_ID_KEY","setTokens","refreshToken","idToken","localId","_ref$expiresIn","expiresIn","expiresDate","getTime","localStorageService","getAccessToken","getRefreshToken","getTokenExpiresDate","getUserId","removeAuthData","removeItem","http","axios","create","baseURL","configFile","apiEndpoint","interceptors","request","use","_asyncToGenerator","_regeneratorRuntime","mark","_callee","containSlash","_yield$httpAuth$post","accessToken","wrap","_context","prev","next","isFireBase","url","slice","httpAuth","post","grant_type","refresh_token","sent","id_token","expires_in","user_id","params","auth","abrupt","stop","_x","apply","arguments","reject","response","res","key","status","toast","httpService","get","put","delete","userEndpoint","userService","_get","_yield$httpService$ge","_create","_callee2","payload","_yield$httpService$pu","_context2","getCurrentUser","_getCurrentUser","_callee3","_yield$httpService$ge2","_context3","require","process","REACT_APP_FIREBASE_KEY","AuthContext","React","createContext","useAuth","useContext","AuthProvider","setError","currentUser","setUser","setLoading","randomInt","min","max","floor","_signUp","password","rest","_error$response$data$","code","returnSecureToken","createUser","ate","image","substring","t0","errorCatcher","_signIn","_ref3","_yield$httpAuth$post2","_error$response$data$2","getUserData","_x3","_createUser","_yield$userService$cr","_getUserData","_callee4","_yield$userService$ge","_context4","finish","Provider","signUp","signIn","_x2","logOut","UserCard","location","pathname","src","width","role","Quality","qualityService","_fetchAll","QualitiesContex","useQualities","QualitiesProvider","_yield$qualityService","getQuality","q","Qualities","_useQualities","_Fragment","QualitiesCard","MeetingsCard","displayDate","currentDate","createdDate","parseInt","timeDiff","secondsDiff","round","monthNames","hoursDiff","minutesDiff","hours","includes","minutes","currentMonthName","getMonth","getDate","getFullYear","UserContext","useUser","UserProvider","setUsers","_getUsers","getUsers","getUserById","Comment","created","onRemove","alt","height","CommentsList","comment","TextAreaField","AddCommentForm","commentEndPoint","commentService","createComment","_createComment","getComments","_getComments","orderBy","equalTo","removeComment","_removeComment","commentId","_yield$httpService$de","CommentsContext","CommentsProvider","setComments","_yield$commentService","nanoid","_toConsumableArray","_yield$commentService2","_yield$commentService3","Comments","_useComments","sortedComments","UserPage","Pagination","itemsCount","pageSize","onPageChange","currentPage","pageCount","ceil","pages","_","range","page","GroupList","items","valueProperty","contentProperty","onItemSelect","selectedItem","item","SearchStatus","number","lastOne","Number","indexOf","renderPhrase","BookMark","TableBody","columns","renderContent","column","component","path","TableHeader","onSort","selectedSort","rendeSortArrow","currentPath","order","undefined","scope","Table","professionService","ProfessionContext","useProfessions","ProfessionProvider","setProfessions","_getProfessionsList","_yield$ProfessionServ","ProfessionService","getProfessionsList","getProfession","p","Profession","_useProfessions","UserTable","onToggleBookMark","Link","to","UsersListPage","setCurrentPage","professionsLoading","searchQuery","setSearchQuery","selectedProf","setSelectedProf","sortBy","setSortBy","filteredUsers","toLowerCase","count","usersCrop","pageNumber","startIndex","splice","paginate","placeholder","onDelete","newArray","pageIndex","Users","edit","CheckBoxField","LoginForm","stayOn","isCapitalSymbol","isContainDigit","handleSubmit","state","from","RegisterForm","licence","newData","Login","formType","setFormType","toggleFormType","useMockData","statusConst","idle","pending","success","setStatus","progress","setProgress","setCount","summCount","incrementCount","_initialize","_iterator3","_step3","t1","t2","t3","newProgress","updateProgress","initialize","Main","_useMockData","NavProfile","isOpen","setOpen","NavBar","ProtectedRoute","Component","Route","render","props","Redirect","LogOut","App","Switch","exact","ToastContainer","ReactDOM","StrictMode","BrowserRouter","document","getElementById"],"mappings":"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","file":"static/js/main.153ab04e.chunk.js","sourcesContent":["const reportWebVitals = (onPerfEntry) => {\r\n    if (onPerfEntry && onPerfEntry instanceof Function) {\r\n        import(\"web-vitals\").then(\r\n            ({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n                getCLS(onPerfEntry);\r\n                getFID(onPerfEntry);\r\n                getFCP(onPerfEntry);\r\n                getLCP(onPerfEntry);\r\n                getTTFB(onPerfEntry);\r\n            }\r\n        );\r\n    }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","export function validator(data, config) {\r\n    const errors = {};\r\n    function validate(validateMethod, data, config) {\r\n        let statusValidate;\r\n        switch (validateMethod) {\r\n            case \"isRequired\": {\r\n                if (typeof data === \"boolean\") {\r\n                    statusValidate = !data;\r\n                } else {\r\n                    statusValidate = data.trim() === \"\";\r\n                }\r\n                break;\r\n            }\r\n            case \"isEmail\": {\r\n                const emailRegExp = /^\\S+@\\S+\\.\\S+$/g;\r\n                statusValidate = !emailRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isCapitalSymbol\": {\r\n                const capitalRegExp = /[A-Z]+/g;\r\n                statusValidate = !capitalRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"isContainDigit\": {\r\n                const digitRegExp = /\\d+/g;\r\n                statusValidate = !digitRegExp.test(data);\r\n                break;\r\n            }\r\n            case \"min\": {\r\n                statusValidate = data.length < config.value;\r\n                break;\r\n            }\r\n            default:\r\n                break;\r\n        }\r\n        if (statusValidate) return config.message;\r\n    }\r\n    for (const fieldName in data) {\r\n        for (const validateMethod in config[fieldName]) {\r\n            const error = validate(\r\n                validateMethod,\r\n                data[fieldName],\r\n                config[fieldName][validateMethod]\r\n            );\r\n            if (error && !errors[fieldName]) {\r\n                errors[fieldName] = error;\r\n            }\r\n        }\r\n    }\r\n    return errors;\r\n}\r\n","export const professionsObject = {\r\n    doctor: { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\r\n    waiter: { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\r\n    physics: { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\r\n    engineer: { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\r\n    actor: { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\r\n    cook: { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\r\n};\r\nexport const professions = [\r\n    { _id: \"67rdca3eeb7f6fgeed471818\", name: \"Доктор\" },\r\n    { _id: \"67rdca3eeb7f6fgeed471820\", name: \"Официант\" },\r\n    { _id: \"67rdca3eeb7f6fgeed471814\", name: \"Физик\" },\r\n    { _id: \"67rdca3eeb7f6fgeed471822\", name: \"Инженер\" },\r\n    { _id: \"67rdca3eeb7f6fgeed471824\", name: \"Актер\" },\r\n    { _id: \"67rdca3eeb7f6fgeed471829\", name: \"Повар\" }\r\n];\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(professionsObject);\r\n        }, 2000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll\r\n};\r\n","import { professionsObject as professions } from \"./professions.api\";\r\nconst qualities = {\r\n    tedious: {\r\n        _id: \"67rdca3eeb7f6fgeed471198\",\r\n        name: \"Нудила\",\r\n        color: \"primary\"\r\n    },\r\n    strange: {\r\n        _id: \"67rdca3eeb7f6fgeed471100\",\r\n        name: \"Странный\",\r\n        color: \"secondary\"\r\n    },\r\n    buller: {\r\n        _id: \"67rdca3eeb7f6fgeed4711012\",\r\n        name: \"Троль\",\r\n        color: \"success\"\r\n    },\r\n    alcoholic: {\r\n        _id: \"67rdca3eeb7f6fgeed471101\",\r\n        name: \"Алкоголик\",\r\n        color: \"danger\"\r\n    },\r\n    handsome: {\r\n        _id: \"67rdca3eeb7f6fgeed471102\",\r\n        name: \"Красавчик\",\r\n        color: \"info\"\r\n    },\r\n    uncertain: {\r\n        _id: \"67rdca3eeb7f6fgeed471103\",\r\n        name: \"Неуверенный\",\r\n        color: \"dark\"\r\n    }\r\n};\r\n\r\nconst users = [\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471815\",\r\n        name: \"Джон Дориан\",\r\n        email: \"Jony7351@tw.com\",\r\n        sex: \"male\",\r\n        profession: professions.doctor,\r\n        qualities: [qualities.tedious, qualities.uncertain, qualities.strange],\r\n        completedMeetings: 36,\r\n        rate: 2.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471816\",\r\n        name: \"Кокс\",\r\n        email: \"white4571@twipet.com\",\r\n        sex: \"male\",\r\n        profession: professions.doctor,\r\n        qualities: [qualities.buller, qualities.handsome, qualities.alcoholic],\r\n        completedMeetings: 15,\r\n        rate: 2.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471817\",\r\n        name: \"Боб Келсо\",\r\n        email: \"bob007@tw.com\",\r\n        sex: \"male\",\r\n        profession: professions.doctor,\r\n        qualities: [qualities.buller],\r\n        completedMeetings: 247,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471818\",\r\n        name: \"Рэйчел Грин\",\r\n        email: \"green7311@fam.biz\",\r\n        sex: \"female\",\r\n        profession: professions.waiter,\r\n        qualities: [qualities.uncertain],\r\n        completedMeetings: 148,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471819\",\r\n        name: \"Шелдон Купер\",\r\n        email: \"mindgames6878@phis.tech\",\r\n        sex: \"male\",\r\n        profession: professions.physics,\r\n        qualities: [qualities.strange, qualities.tedious],\r\n        completedMeetings: 37,\r\n        rate: 4.6,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471820\",\r\n        name: \"Леонард Хофстедтер\",\r\n        email: \"mindes000@phis.tech\",\r\n        sex: \"male\",\r\n        profession: professions.physics,\r\n        qualities: [qualities.strange, qualities.uncertain],\r\n        completedMeetings: 147,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471821\",\r\n        name: \"Говард Воловиц\",\r\n        email: \"gov1903@phis.tech\",\r\n        sex: \"male\",\r\n        profession: professions.engineer,\r\n        qualities: [qualities.strange, qualities.tedious],\r\n        completedMeetings: 72,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471822\",\r\n        name: \"Никола Тесла\",\r\n        email: \"electro@underground.tech\",\r\n        sex: \"male\",\r\n        profession: professions.engineer,\r\n        qualities: [qualities.handsome],\r\n        completedMeetings: 72,\r\n        rate: 5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471823\",\r\n        name: \"Моника Геллер\",\r\n        email: \"mono@super.com\",\r\n        sex: \"female\",\r\n        profession: professions.cook,\r\n        qualities: [qualities.strange, qualities.uncertain],\r\n        completedMeetings: 17,\r\n        rate: 4.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed471824\",\r\n        name: \"Рататуй\",\r\n        email: \"ratatatata@underground.com\",\r\n        sex: \"male\",\r\n        profession: professions.cook,\r\n        qualities: [qualities.handsome, qualities.buller],\r\n        completedMeetings: 17,\r\n        rate: 4.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed47181f\",\r\n        name: \"Джоуи Триббиани\",\r\n        email: \"joe@trib.com\",\r\n        sex: \"male\",\r\n        profession: professions.actor,\r\n        qualities: [qualities.uncertain, qualities.strange],\r\n        completedMeetings: 434,\r\n        rate: 3.5,\r\n        bookmark: false\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgeed47181r\",\r\n        name: \"Брэд Питт\",\r\n        email: \"superstar@star.com\",\r\n        sex: \"male\",\r\n        profession: professions.actor,\r\n        qualities: [qualities.handsome],\r\n        completedMeetings: 434,\r\n        rate: 5,\r\n        bookmark: false\r\n    }\r\n];\r\nif (!localStorage.getItem(\"users\")) {\r\n    localStorage.setItem(\"users\", JSON.stringify(users));\r\n}\r\n\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(JSON.parse(localStorage.getItem(\"users\")));\r\n        }, 2000);\r\n    });\r\nconst update = (id, data) =>\r\n    new Promise((resolve) => {\r\n        const users = JSON.parse(localStorage.getItem(\"users\"));\r\n        const userIndex = users.findIndex((u) => u._id === id);\r\n        users[userIndex] = { ...users[userIndex], ...data };\r\n        localStorage.setItem(\"users\", JSON.stringify(users));\r\n        resolve(users[userIndex]);\r\n    });\r\n\r\nconst getById = (id) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(\r\n                JSON.parse(localStorage.getItem(\"users\")).find(\r\n                    (user) => user._id === id\r\n                )\r\n            );\r\n        }, 1000);\r\n    });\r\nexport default {\r\n    fetchAll,\r\n    getById,\r\n    update\r\n};\r\n","const qualities = {\r\n    tedious: {\r\n        _id: \"67rdca3eeb7f6fgeed471198\",\r\n        name: \"Нудила\",\r\n        color: \"primary\"\r\n    },\r\n    strange: {\r\n        _id: \"67rdca3eeb7f6fgeed471100\",\r\n        name: \"Странный\",\r\n        color: \"secondary\"\r\n    },\r\n    buller: {\r\n        _id: \"67rdca3eeb7f6fgeed4711012\",\r\n        name: \"Троль\",\r\n        color: \"success\"\r\n    },\r\n    alcoholic: {\r\n        _id: \"67rdca3eeb7f6fgeed471101\",\r\n        name: \"Алкоголик\",\r\n        color: \"danger\"\r\n    },\r\n    handsome: {\r\n        _id: \"67rdca3eeb7f6fgeed471102\",\r\n        name: \"Красавчик\",\r\n        color: \"info\"\r\n    },\r\n    uncertain: {\r\n        _id: \"67rdca3eeb7f6fgeed471103\",\r\n        name: \"Неуверенный\",\r\n        color: \"dark\"\r\n    }\r\n};\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(qualities);\r\n        }, 2000);\r\n    });\r\n\r\nexport default {\r\n    fetchAll\r\n};\r\n","const comments = [\r\n    {\r\n        _id: \"67rdca3eeb7f6fg\",\r\n        userId: \"67rdca3eeb7f6fgeed471815\",\r\n        pageId: \"67rdca3eeb7f6fgeed471815\",\r\n        content: \"Lorem ipsum dolor\",\r\n        created_at: \"1633576399367\"\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgdasd\",\r\n        pageId: \"67rdca3eeb7f6fgeed471815\",\r\n        userId: \"67rdca3eeb7f6fgeed471815\",\r\n        content: \"Lorem ipsum dolor and etc\",\r\n        created_at: \"1633573058520\"\r\n    },\r\n    {\r\n        _id: \"67rdca3eeb7f6fgdaasd\",\r\n        pageId: \"67rdca3eeb7f6fgeed471817\",\r\n        userId: \"67rdca3eeb7f6fgeed471815\",\r\n        content: \"Lorem ipsum dolor and etc\",\r\n        created_at: \"1633573058520\"\r\n    }\r\n];\r\nif (!localStorage.getItem(\"comments\")) {\r\n    localStorage.setItem(\"comments\", JSON.stringify(comments));\r\n}\r\nconst fetchAll = () =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(comments);\r\n        }, 200);\r\n    });\r\n\r\nconst fetchCommentsForUser = (userId) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            resolve(\r\n                JSON.parse(localStorage.getItem(\"comments\")).filter(\r\n                    (c) => c.pageId === userId\r\n                )\r\n            );\r\n        }, 200);\r\n    });\r\nconst add = (data) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\r\n            const newComment = {\r\n                ...data,\r\n                created_at: Date.now(),\r\n                _id: Math.random().toString(36).substr(2, 9)\r\n            };\r\n            comments.push(newComment);\r\n            localStorage.setItem(\"comments\", JSON.stringify(comments));\r\n            resolve(newComment);\r\n        }, 200);\r\n    });\r\n\r\nconst remove = (id) =>\r\n    new Promise((resolve) => {\r\n        window.setTimeout(function () {\r\n            const comments = JSON.parse(localStorage.getItem(\"comments\"));\r\n            const newComments = comments.filter((x) => x._id !== id);\r\n            console.log(id);\r\n            console.log(newComments);\r\n            localStorage.setItem(\"comments\", JSON.stringify(newComments));\r\n            resolve(id);\r\n        }, 200);\r\n    });\r\nexport default {\r\n    fetchAll,\r\n    fetchCommentsForUser,\r\n    add,\r\n    remove\r\n};\r\n","import users from \"./fake.api/user.api\";\r\nimport professions from \"./fake.api/professions.api\";\r\nimport qualities from \"./fake.api/qualities.api\";\r\nimport comments from \"./fake.api/comments.api\";\r\nconst API = {\r\n    users,\r\n    professions,\r\n    qualities,\r\n    comments\r\n};\r\nexport default API;\r\n","import React, { useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextField = ({ label, type, name, value, onChange, error }) => {\r\n    const [showPassword, setShowPassword] = useState(false);\r\n\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    const toggleShowPassword = () => {\r\n        setShowPassword((prevState) => !prevState);\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor={name}>{label}</label>\r\n            <div className=\"input-group has-validation\">\r\n                <input\r\n                    type={showPassword ? \"text\" : type}\r\n                    id={name}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className={getInputClasses()}\r\n                />\r\n                {type === \"password\" && (\r\n                    <button\r\n                        className=\"btn btn-outline-secondary\"\r\n                        type=\"button\"\r\n                        onClick={toggleShowPassword}\r\n                    >\r\n                        <i\r\n                            className={\r\n                                \"bi bi-eye\" + (showPassword ? \"-slash\" : \"\")\r\n                            }\r\n                        ></i>\r\n                    </button>\r\n                )}\r\n                {error && <div className=\"invalid-feedback\">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nTextField.defaultProps = {\r\n    type: \"text\"\r\n};\r\nTextField.propTypes = {\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TextField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SelectField = ({\r\n    label,\r\n    value,\r\n    onChange,\r\n    defaultOption,\r\n    options,\r\n    error,\r\n    name\r\n}) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-select\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.values(options)\r\n            : options;\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor={name} className=\"form-label\">\r\n                {label}\r\n            </label>\r\n            <select\r\n                className={getInputClasses()}\r\n                id={name}\r\n                name={name}\r\n                value={value}\r\n                onChange={handleChange}\r\n            >\r\n                <option disabled value=\"\">\r\n                    {defaultOption}\r\n                </option>\r\n                {optionsArray.length > 0 &&\r\n                    optionsArray.map((option) => (\r\n                        <option value={option.value} key={option.value}>\r\n                            {option.label}\r\n                        </option>\r\n                    ))}\r\n            </select>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\n\r\nSelectField.propTypes = {\r\n    defaultOption: PropTypes.string,\r\n    label: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string,\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    name: PropTypes.string\r\n};\r\n\r\nexport default SelectField;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst RadioField = ({ options, name, onChange, value, label }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <div>\r\n                {options.map((option) => (\r\n                    <div\r\n                        key={option.name + \"_\" + option.value}\r\n                        className=\"form-check form-check-inline\"\r\n                    >\r\n                        <input\r\n                            className=\"form-check-input\"\r\n                            type=\"radio\"\r\n                            name={name}\r\n                            id={option.name + \"_\" + option.value}\r\n                            checked={option.value === value}\r\n                            value={option.value}\r\n                            onChange={handleChange}\r\n                        />\r\n                        <label\r\n                            className=\"form-check-label\"\r\n                            htmlFor={option.name + \"_\" + option.value}\r\n                        >\r\n                            {option.name}\r\n                        </label>\r\n                    </div>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nRadioField.propTypes = {\r\n    options: PropTypes.array,\r\n    name: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    value: PropTypes.string,\r\n    label: PropTypes.string\r\n};\r\n\r\nexport default RadioField;\r\n","import React from \"react\";\r\nimport Select from \"react-select\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst MultiSelectField = ({ options, onChange, name, label, defaultValue }) => {\r\n    const optionsArray =\r\n        !Array.isArray(options) && typeof options === \"object\"\r\n            ? Object.values(options)\r\n            : options;\r\n\r\n    const handleChange = (value) => {\r\n        onChange({ name: name, value });\r\n    };\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label className=\"form-label\">{label}</label>\r\n            <Select\r\n                isMulti\r\n                closeMenuOnSelect={false}\r\n                defaultValue={defaultValue}\r\n                options={optionsArray}\r\n                className=\"basic-multi-select\"\r\n                classNamePrefix=\"select\"\r\n                onChange={handleChange}\r\n                name={name}\r\n            />\r\n        </div>\r\n    );\r\n};\r\nMultiSelectField.propTypes = {\r\n    options: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    onChange: PropTypes.func,\r\n    name: PropTypes.string,\r\n    label: PropTypes.string,\r\n    defaultValue: PropTypes.array\r\n};\r\n\r\nexport default MultiSelectField;\r\n","import React from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nconst BackHistoryButton = () => {\r\n    const history = useHistory();\r\n    return (\r\n        <button className=\"btn btn-primary\" onClick={() => history.goBack()}>\r\n            <i className=\"bi bi-caret-left\"></i>\r\n            Назад\r\n        </button>\r\n    );\r\n};\r\n\r\nexport default BackHistoryButton;\r\n","import EditUserPage from \"./editUserPage\";\r\nexport default EditUserPage;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport api from \"../../../api\";\r\nimport TextField from \"../../common/form/textField\";\r\nimport SelectField from \"../../common/form/selectField\";\r\nimport RadioField from \"../../common/form/radioField\";\r\nimport MultiSelectField from \"../../common/form/multiSelectField\";\r\nimport BackHistoryButton from \"../../common/backButton\";\r\n\r\nconst EditUserPage = () => {\r\n    const { userId } = useParams();\r\n    const history = useHistory();\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [data, setData] = useState({\r\n        name: \"\",\r\n        email: \"\",\r\n        profession: \"\",\r\n        sex: \"male\",\r\n        qualities: []\r\n    });\r\n    const [professions, setProfession] = useState([]);\r\n    const [qualities, setQualities] = useState([]);\r\n    const [errors, setErrors] = useState({});\r\n    const getProfessionById = (id) => {\r\n        for (const prof of professions) {\r\n            if (prof.value === id) {\r\n                return { _id: prof.value, name: prof.label };\r\n            }\r\n        }\r\n    };\r\n    const getQualities = (elements) => {\r\n        const qualitiesArray = [];\r\n        for (const elem of elements) {\r\n            for (const quality in qualities) {\r\n                if (elem.value === qualities[quality].value) {\r\n                    qualitiesArray.push({\r\n                        _id: qualities[quality].value,\r\n                        name: qualities[quality].label,\r\n                        color: qualities[quality].color\r\n                    });\r\n                }\r\n            }\r\n        }\r\n        return qualitiesArray;\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        const { profession, qualities } = data;\r\n        api.users\r\n            .update(userId, {\r\n                ...data,\r\n                profession: getProfessionById(profession),\r\n                qualities: getQualities(qualities)\r\n            })\r\n            .then((data) => history.push(`/users/${data._id}`));\r\n        console.log({\r\n            ...data,\r\n            profession: getProfessionById(profession),\r\n            qualities: getQualities(qualities)\r\n        });\r\n    };\r\n    const transformData = (data) => {\r\n        return data.map((qual) => ({ label: qual.name, value: qual._id }));\r\n    };\r\n    useEffect(() => {\r\n        setIsLoading(true);\r\n        api.users.getById(userId).then(({ profession, qualities, ...data }) =>\r\n            setData((prevState) => ({\r\n                ...prevState,\r\n                ...data,\r\n                qualities: transformData(qualities),\r\n                profession: profession._id\r\n            }))\r\n        );\r\n        api.professions.fetchAll().then((data) => {\r\n            const professionsList = Object.keys(data).map((professionName) => ({\r\n                label: data[professionName].name,\r\n                value: data[professionName]._id\r\n            }));\r\n            setProfession(professionsList);\r\n        });\r\n        api.qualities.fetchAll().then((data) => {\r\n            const qualitiesList = Object.keys(data).map((optionName) => ({\r\n                value: data[optionName]._id,\r\n                label: data[optionName].name,\r\n                color: data[optionName].color\r\n            }));\r\n            setQualities(qualitiesList);\r\n        });\r\n    }, []);\r\n    useEffect(() => {\r\n        if (data._id) setIsLoading(false);\r\n    }, [data]);\r\n\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        name: {\r\n            isRequired: {\r\n                message: \"Введите ваше имя\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <BackHistoryButton />\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                    {!isLoading && Object.keys(professions).length > 0 ? (\r\n                        <form onSubmit={handleSubmit}>\r\n                            <TextField\r\n                                label=\"Имя\"\r\n                                name=\"name\"\r\n                                value={data.name}\r\n                                onChange={handleChange}\r\n                                error={errors.name}\r\n                            />\r\n                            <TextField\r\n                                label=\"Электронная почта\"\r\n                                name=\"email\"\r\n                                value={data.email}\r\n                                onChange={handleChange}\r\n                                error={errors.email}\r\n                            />\r\n                            <SelectField\r\n                                label=\"Выбери свою профессию\"\r\n                                defaultOption=\"Choose...\"\r\n                                options={professions}\r\n                                name=\"profession\"\r\n                                onChange={handleChange}\r\n                                value={data.profession}\r\n                                error={errors.profession}\r\n                            />\r\n                            <RadioField\r\n                                options={[\r\n                                    { name: \"Male\", value: \"male\" },\r\n                                    { name: \"Female\", value: \"female\" },\r\n                                    { name: \"Other\", value: \"other\" }\r\n                                ]}\r\n                                value={data.sex}\r\n                                name=\"sex\"\r\n                                onChange={handleChange}\r\n                                label=\"Выберите ваш пол\"\r\n                            />\r\n                            <MultiSelectField\r\n                                defaultValue={data.qualities}\r\n                                options={qualities}\r\n                                onChange={handleChange}\r\n                                name=\"qualities\"\r\n                                label=\"Выберите ваши качества\"\r\n                            />\r\n                            <button\r\n                                type=\"submit\"\r\n                                disabled={!isValid}\r\n                                className=\"btn btn-primary w-100 mx-auto\"\r\n                            >\r\n                                Обновить\r\n                            </button>\r\n                        </form>\r\n                    ) : (\r\n                        \"Loading...\"\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default EditUserPage;\r\n","const TOKEN_KEY = \"jwt-token\";\r\nconst REFRESH_KEY = \"jwt-refresh-token\";\r\nconst EXPIRES_KEY = \"jwt-expires\";\r\nconst USER_ID_KEY = \"user-local-id\";\r\n\r\nexport function setTokens({ refreshToken, idToken, localId, expiresIn = 3600 }) {\r\n    const expiresDate = new Date().getTime() + expiresIn * 1000;\r\n    localStorage.setItem(USER_ID_KEY, localId);\r\n    localStorage.setItem(TOKEN_KEY, idToken);\r\n    localStorage.setItem(REFRESH_KEY, refreshToken);\r\n    localStorage.setItem(EXPIRES_KEY, expiresDate);\r\n};\r\n\r\nexport function getAccessToken() {\r\n    return localStorage.getItem(TOKEN_KEY);\r\n}\r\n\r\nexport function getRefreshToken() {\r\n    return localStorage.getItem(REFRESH_KEY);\r\n}\r\n\r\nexport function getTokenExpiresDate() {\r\n    return localStorage.getItem(EXPIRES_KEY);\r\n}\r\n\r\nexport function getUserId() {\r\n    return localStorage.getItem(USER_ID_KEY);\r\n}\r\n\r\nexport function removeAuthData() {\r\n    localStorage.removeItem(USER_ID_KEY);\r\n    localStorage.removeItem(TOKEN_KEY);\r\n    localStorage.removeItem(REFRESH_KEY);\r\n    localStorage.removeItem(EXPIRES_KEY);\r\n}\r\n\r\nconst localStorageService = {\r\n    setTokens,\r\n    getAccessToken,\r\n    getRefreshToken,\r\n    getTokenExpiresDate,\r\n    getUserId,\r\n    removeAuthData\r\n};\r\n\r\nexport default localStorageService;\r\n","import axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport configFile from \"../app/config.json\";\r\nimport { httpAuth } from \"../app/hooks/useAuth\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst http = axios.create({\r\n    baseURL: configFile.apiEndpoint\r\n});\r\n\r\nhttp.interceptors.request.use(\r\n    async function (config) {\r\n        if (configFile.isFireBase) {\r\n            const containSlash = /\\/$/gi.test(config.url);\r\n            config.url =\r\n                (containSlash ? config.url.slice(0, -1) : config.url) + \".json\";\r\n            const expiresDate = localStorageService.getTokenExpiresDate();\r\n            const refreshToken = localStorageService.getRefreshToken();\r\n            if (refreshToken && expiresDate < Date.now()) {\r\n                const { data } = await httpAuth.post(\"token\", {\r\n                    grant_type: \"refresh_token\",\r\n                    refresh_token: refreshToken\r\n                });\r\n                localStorageService.setTokens({\r\n                    refreshToken: data.refresh_token,\r\n                    idToken: data.id_token,\r\n                    expiresIn: data.expires_in,\r\n                    localId: data.user_id\r\n                });\r\n            }\r\n            const accessToken = localStorageService.getAccessToken();\r\n            if (accessToken) {\r\n                config.params = { ...config.params, auth: accessToken };\r\n            }\r\n        }\r\n        return config;\r\n    },\r\n    function (error) {\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nfunction transformData(data) {\r\n    return data && !data._id\r\n        ? Object.keys(data).map((key) => ({\r\n            ...data[key]\r\n        }))\r\n        : data;\r\n}\r\nhttp.interceptors.response.use(\r\n    (res) => {\r\n        if (configFile.isFireBase) {\r\n            res.data = { content: transformData(res.data) };\r\n        }\r\n        return res;\r\n    },\r\n    function (error) {\r\n        const expectedErrors =\r\n            error.response &&\r\n            error.response.status >= 400 &&\r\n            error.response.status < 500;\r\n\r\n        if (!expectedErrors) {\r\n            console.log(error);\r\n            toast.error(\"Something was wrong. Try it later\");\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n);\r\nconst httpService = {\r\n    get: http.get,\r\n    post: http.post,\r\n    put: http.put,\r\n    delete: http.delete\r\n};\r\nexport default httpService;\r\n","import httpService from \"./http.service\";\r\nimport localStorageService from \"./localStorage.service\";\r\n\r\nconst userEndpoint = \"user/\";\r\n\r\nconst userService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(userEndpoint);\r\n        return data;\r\n    },\r\n    create: async (payload) => {\r\n        const { data } = await httpService.put(userEndpoint + payload._id, payload);\r\n        return data;\r\n    },\r\n    getCurrentUser: async () => {\r\n        const { data } = await httpService.get(userEndpoint + localStorageService.getUserId());\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default userService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport axios from \"axios\";\r\nimport userService from \"../../service/user.service\";\r\nimport { toast } from \"react-toastify\";\r\nimport localStorageService, { setTokens } from \"../../service/localStorage.service\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nrequire(\"dotenv\").config();\r\n\r\nexport const httpAuth = axios.create({\r\n    baseURL: \"https://identitytoolkit.googleapis.com/v1/\",\r\n    params: {\r\n        key: process.env.REACT_APP_FIREBASE_KEY\r\n    }\r\n});\r\nconst AuthContext = React.createContext();\r\n\r\nexport const useAuth = () => {\r\n    return useContext(AuthContext);\r\n};\r\n\r\nconst AuthProvider = ({ children }) => {\r\n    const [error, setError] = useState(null);\r\n    const [currentUser, setUser] = useState();\r\n    const [isLoading, setLoading] = useState(true);\r\n    const history = useHistory();\r\n    function randomInt(min, max) {\r\n        return Math.floor(Math.random() * (max - min + 1) + min);\r\n    }\r\n    async function signUp({ email, password, ...rest }) {\r\n        const url = `accounts:signUp?key=${process.env.REACT_APP_FIREBASE_KEY}`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, { email, password, returnSecureToken: true });\r\n            setTokens(data);\r\n            await createUser({\r\n                _id: data.localId,\r\n                email,\r\n                ate: randomInt(1, 5),\r\n                completedMeetings: randomInt(0, 200),\r\n                image: `https://avatars.dicebear.com/api/avataaars/${(\r\n                Math.random() + 1\r\n            )\r\n                .toString(36)\r\n                .substring(7)}.svg`,\r\n                ...rest\r\n            });\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                if (message === \"EMAIL_EXISTS\") {\r\n                    const errorObject = { email: \"Пользователь с таким email уже существует\" };\r\n                    throw errorObject;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    async function signIn({ email, password }) {\r\n        const url = `accounts:signInWithPassword?key=${process.env.REACT_APP_FIREBASE_KEY}`;\r\n        try {\r\n            const { data } = await httpAuth.post(url, { email, password, returnSecureToken: true });\r\n            setTokens(data);\r\n            await getUserData();\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n            const { code, message } = error.response.data.error;\r\n            if (code === 400) {\r\n                if (message === \"EMAIL_NOT_FOUND\") {\r\n                    const errorObject = { email: \"Неправильный email\" };\r\n                    throw errorObject;\r\n                } else if (message === \"INVALID_PASSWORD\") {\r\n                    const errorObject = { password: \"Неправильный пароль\" };\r\n                    throw errorObject;\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const logOut = () => {\r\n        localStorageService.removeAuthData();\r\n        setUser(null);\r\n        history.push(\"/\");\r\n    };\r\n    async function createUser(data) {\r\n        try {\r\n            const { content } = await userService.create(data);\r\n            console.log(content);\r\n            setUser(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    async function getUserData() {\r\n        try {\r\n            const { content } = await userService.getCurrentUser();\r\n            setUser(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (localStorageService.getAccessToken()) {\r\n            getUserData();\r\n        } else {\r\n            setLoading(false);\r\n        }\r\n    }, []);\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    return (\r\n        <AuthContext.Provider value={{ signUp, signIn, currentUser, logOut }}>\r\n            {!isLoading ? children : \"Loading...\"}\r\n        </AuthContext.Provider>\r\n    );\r\n};\r\n\r\nAuthProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default AuthProvider;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nconst UserCard = ({ user }) => {\r\n    const history = useHistory();\r\n    const { currentUser } = useAuth();\r\n    const handleClick = () => {\r\n        history.push(history.location.pathname + \"/edit\");\r\n    };\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body\">\r\n                {currentUser._id === user._id &&\r\n                    <button\r\n                        className=\"position-absolute top-0 end-0 btn btn-light btn-sm\"\r\n                        onClick={handleClick}\r\n                    >\r\n                        <i className=\"bi bi-gear\"></i>\r\n                    </button>\r\n                }\r\n                <div className=\"d-flex flex-column align-items-center text-center position-relative\">\r\n                    <img\r\n                        src={user.image}\r\n                        className=\"rounded-circle\"\r\n                        width=\"150\"\r\n                    />\r\n                    <div className=\"mt-3\">\r\n                        <h4>{user.name}</h4>\r\n                        <p className=\"text-secondary mb-1\">\r\n                            {user.profession.name}\r\n                        </p>\r\n                        <div className=\"text-muted\">\r\n                            <i\r\n                                className=\"bi bi-caret-down-fill text-primary\"\r\n                                role=\"button\"\r\n                            ></i>\r\n                            <i\r\n                                className=\"bi bi-caret-up text-secondary\"\r\n                                role=\"button\"\r\n                            ></i>\r\n                            <span className=\"ms-2\">{user.rate}</span>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nUserCard.propTypes = {\r\n    user: PropTypes.object\r\n};\r\n\r\nexport default UserCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst Quality = ({ color, name, _id }) => {\r\n    return (\r\n        <span className={\"badge m-1 bg-\" + color}>\r\n            {name}\r\n        </span>\r\n    );\r\n};\r\nQuality.propTypes = {\r\n    color: PropTypes.string.isRequired,\r\n    name: PropTypes.string.isRequired,\r\n    _id: PropTypes.string.isRequired\r\n};\r\n\r\nexport default Quality;\r\n","import httpService from \"./http.service\";\r\nconst qualityEndPoint = \"quality/\";\r\n\r\nconst qualityService = {\r\n    fetchAll: async () => {\r\n        const { data } = await httpService.get(qualityEndPoint);\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default qualityService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport qualityService from \"../../service/quality.service\";\r\nimport { toast } from \"react-toastify\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst QualitiesContex = React.createContext();\r\nexport const useQualities = () => {\r\n    return useContext(QualitiesContex);\r\n};\r\n\r\nexport const QualitiesProvider = ({ children }) => {\r\n    const [qualities, setQualities] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    const [isLoading, setLoading] = useState(true);\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    useEffect(() => {\r\n        const getQualities = async () => {\r\n            try {\r\n                const { content } = await qualityService.fetchAll();\r\n                setQualities(content);\r\n                setLoading(false);\r\n            } catch (error) {\r\n                errorCatcher(error);\r\n            };\r\n        };\r\n        getQualities();\r\n    }, []);\r\n    const getQuality = (id) => {\r\n        return qualities.find((q) => q._id === id);\r\n    };\r\n\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n\r\n    return (\r\n        <QualitiesContex.Provider value={ { qualities, getQuality } }>\r\n            {!isLoading ? children : <h1>Loading...</h1>}\r\n        </QualitiesContex.Provider>\r\n    );\r\n};\r\n\r\nQualitiesProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import Qualities from \"./qualitiesList\";\r\nexport default Qualities;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport Quality from \"./quality\";\r\nimport { useQualities } from \"../../../hooks/useQualities\";\r\n\r\nconst QualitiesList = ({ qualities }) => {\r\n    const { isLoading, getQuality } = useQualities();\r\n    if (!isLoading) {\r\n        return (\r\n            <>\r\n                {qualities.map((qual) => (\r\n                    <Quality key={qual} {...getQuality(qual)} />\r\n                ))}\r\n            </>\r\n        );\r\n    } else return \"Loading...\";\r\n};\r\n\r\nQualitiesList.propTypes = {\r\n    qualities: PropTypes.array\r\n};\r\n\r\nexport default QualitiesList;\r\n","import React from \"react\";\r\nimport Qualities from \"./qualities\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst QualitiesCard = ({ data }) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n                <h5 className=\"card-title\">\r\n                    <span>Qualities</span>\r\n                </h5>\r\n                <p className=\"card-text\">\r\n                    <Qualities qualities={data} />\r\n                </p>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nQualitiesCard.propTypes = {\r\n    data: PropTypes.array\r\n};\r\n\r\nexport default QualitiesCard;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst MeetingsCard = ({ value }) => {\r\n    return (\r\n        <div className=\"card mb-3\">\r\n            <div className=\"card-body d-flex flex-column justify-content-center text-center\">\r\n                <h5 className=\"card-title\">\r\n                    <span>Completed meetings</span>\r\n                </h5>\r\n\r\n                <h1 className=\"display-1\">{value}</h1>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nMeetingsCard.propTypes = {\r\n    value: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\r\n};\r\n\r\nexport default MeetingsCard;\r\n","export function displayDate(data) {\r\n    const currentDate = new Date();\r\n    const createdDate = new Date(parseInt(data));\r\n    const timeDiff = currentDate.getTime() - createdDate.getTime();\r\n    const secondsDiff = Math.round(timeDiff / 1000);\r\n    const monthNames = [\r\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\r\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\r\n    ];\r\n    if (secondsDiff < 60) {\r\n        return \"1 минуту назад\";\r\n    } else if (secondsDiff < 300) {\r\n        return \"5 минут назад\";\r\n    } else if (secondsDiff < 1800) {\r\n        return \"30 минут назад\";\r\n    } else if (secondsDiff < 3600) {\r\n        return \"менее 1 часа назад\";\r\n    } else if (secondsDiff < 86400) { // hours\r\n        const hoursDiff = Math.floor(secondsDiff / 3600);\r\n        const minutesDiff = Math.floor((secondsDiff - hoursDiff * 3600) / 60);\r\n        const hours = [1, 21].includes(hoursDiff) ? \"час\"\r\n            : [2, 3, 4, 22, 23].includes(hoursDiff) ? \"часа\"\r\n                : \"часов\";\r\n        const minutes = [1, 21, 31, 41, 51].includes(minutesDiff) ? \"минута\"\r\n            : [2, 3, 4, 22, 23, 24, 32, 33, 34, 42, 43, 44, 52, 53, 54].includes(minutesDiff) ? \"минуты\"\r\n                : \"минут\";\r\n        return `${hoursDiff} ${hours} ${minutesDiff} ${minutes} назад`;\r\n    } else if (secondsDiff < 2592000) {\r\n        const currentMonthName = monthNames[createdDate.getMonth()];\r\n        const formattedDate = `${createdDate.getDate()} ${currentMonthName}`;\r\n        return formattedDate;\r\n    } else {\r\n        const currentMonthName = monthNames[createdDate.getMonth()];\r\n        const formattedDate = `${createdDate.getDate()} ${currentMonthName} ${createdDate.getFullYear()}`;\r\n        return formattedDate;\r\n    }\r\n}\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport userService from \"../../service/user.service\";\r\nimport { toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\n\r\nconst UserContext = React.createContext();\r\n\r\nexport const useUser = () => {\r\n    return useContext(UserContext);\r\n};\r\n\r\nconst UserProvider = ({ children }) => {\r\n    const [users, setUsers] = useState([]);\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [error, setError] = useState(null);\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    async function getUsers() {\r\n        try {\r\n            const { content } = await userService.get();\r\n            setUsers(content);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    function getUserById(userId) {\r\n        return users.find((u) => u._id === userId);\r\n    }\r\n    return (\r\n        <UserContext.Provider value={{ users, getUserById }}>\r\n            {!isLoading ? children : \"Loading...\"}\r\n        </UserContext.Provider>\r\n    );\r\n};\r\n\r\nUserProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n\r\nexport default UserProvider;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { displayDate } from \"../../../utils/displayDate\";\r\nimport { useUser } from \"../../../hooks/useUsers\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\nconst Comment = ({\r\n    content,\r\n    created_at: created,\r\n    _id: id,\r\n    userId,\r\n    onRemove\r\n}) => {\r\n    const { getUserById } = useUser();\r\n    const { currentUser } = useAuth();\r\n    const user = getUserById(userId);\r\n\r\n    return (\r\n        <div className=\"bg-light card-body  mb-3\">\r\n            <div className=\"row\">\r\n                    <div className=\"col\">\r\n                        <div className=\"d-flex flex-start \">\r\n                            <img\r\n                                src={user.image}\r\n                                className=\"rounded-circle shadow-1-strong me-3\"\r\n                                alt=\"avatar\"\r\n                                width=\"65\"\r\n                                height=\"65\"\r\n                            />\r\n                            <div className=\"flex-grow-1 flex-shrink-1\">\r\n                                <div className=\"mb-4\">\r\n                                    <div className=\"d-flex justify-content-between align-items-center\">\r\n                                        <p className=\"mb-1 \">\r\n                                            {user && user.name}{\" \"}\r\n                                            <span className=\"small\">\r\n                                                - {displayDate(created)}\r\n                                            </span>\r\n                                        </p>\r\n                                        {currentUser._id === userId &&\r\n                                            <button\r\n                                                className=\"btn btn-sm text-primary d-flex align-items-center\"\r\n                                                onClick={() => onRemove(id)}\r\n                                            >\r\n                                                <i className=\"bi bi-x-lg\"></i>\r\n                                            </button>\r\n                                        }\r\n                                    </div>\r\n                                    <p className=\"small mb-0\">{content}</p>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nComment.propTypes = {\r\n    content: PropTypes.string,\r\n    edited_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    created_at: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    userId: PropTypes.string,\r\n    onRemove: PropTypes.func,\r\n    _id: PropTypes.string\r\n};\r\n\r\nexport default Comment;\r\n","import React from \"react\";\r\nimport Comment from \"./comment\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CommentsList = ({ comments, onRemove }) => {\r\n    return comments.map((comment) => (\r\n        <Comment key={comment._id} {...comment} onRemove={onRemove} />\r\n    ));\r\n};\r\nCommentsList.propTypes = {\r\n    comment: PropTypes.array,\r\n    onRemove: PropTypes.func\r\n};\r\n\r\nexport default CommentsList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst TextAreaField = ({ label, name, value, onChange, error }) => {\r\n    const handleChange = ({ target }) => {\r\n        onChange({ name: target.name, value: target.value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-control\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n\r\n    return (\r\n        <div className=\"mb-4\">\r\n            <label htmlFor={name}> {label}</label>\r\n            <div className=\"input-group has-validation\">\r\n                <textarea\r\n                    id={name}\r\n                    name={name}\r\n                    value={value}\r\n                    onChange={handleChange}\r\n                    className={getInputClasses()}\r\n                />\r\n\r\n                {error && <div className=\"invalid-feedback \">{error}</div>}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\nTextAreaField.defaultProps = {\r\n    type: \"text\"\r\n};\r\nTextAreaField.propTypes = {\r\n    label: PropTypes.string,\r\n    type: PropTypes.string,\r\n    name: PropTypes.string,\r\n    value: PropTypes.string,\r\n    onChange: PropTypes.func,\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default TextAreaField;\r\n","import React, { useState } from \"react\";\r\nimport TextAreaField from \"../form/textAreaField\";\r\nimport { validator } from \"../../../utils/validator\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst AddCommentForm = ({ onSubmit }) => {\r\n    const [data, setData] = useState({});\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        content: {\r\n            isRequired: {\r\n                message: \"Сообщение не может быть пустым\"\r\n            }\r\n        }\r\n    };\r\n\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const clearForm = () => {\r\n        setData({});\r\n        setErrors({});\r\n    };\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        onSubmit(data);\r\n        clearForm();\r\n    };\r\n    return (\r\n        <div>\r\n            <h2>New comment</h2>\r\n            <form onSubmit={handleSubmit}>\r\n                <TextAreaField\r\n                    value={data.content || \"\"}\r\n                    onChange={handleChange}\r\n                    name=\"content\"\r\n                    label=\"Сообщение\"\r\n                    error={errors.content}\r\n                />\r\n                <div className=\"d-flex justify-content-end\">\r\n                    <button className=\"btn btn-primary\">Опубликовать</button>\r\n                </div>\r\n            </form>\r\n        </div>\r\n    );\r\n};\r\nAddCommentForm.propTypes = {\r\n    onSubmit: PropTypes.func\r\n};\r\n\r\nexport default AddCommentForm;\r\n","import CommentsList from \"./commentsList\";\r\nimport AddCommentForm from \"./addCommentForm\";\r\nexport default CommentsList;\r\nexport { AddCommentForm };\r\n","import httpService from \"./http.service\";\r\nconst commentEndPoint = \"comment/\";\r\n\r\nconst commentService = {\r\n    createComment: async (payload) => {\r\n        const { data } = await httpService.put(commentEndPoint + payload._id, payload);\r\n        return data;\r\n    },\r\n    getComments: async (pageId) => {\r\n        const { data } = await httpService.get(commentEndPoint, {\r\n            params: {\r\n                orderBy: \"\\\"pageId\\\"\",\r\n                equalTo: `\"${pageId}\"`\r\n            }\r\n        });\r\n        return data;\r\n    },\r\n    removeComment: async (commentId) => {\r\n        const { data } = await httpService.delete(commentEndPoint + commentId);\r\n        return data;\r\n    }\r\n};\r\n\r\nexport default commentService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useAuth } from \"./useAuth\";\r\nimport { nanoid } from \"nanoid\";\r\nimport commentService from \"../../service/comment.service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst CommentsContext = React.createContext();\r\n\r\nexport const useComments = () => {\r\n    return useContext(CommentsContext);\r\n};\r\n\r\nexport const CommentsProvider = ({ children }) => {\r\n    const { userId } = useParams();\r\n    const { currentUser } = useAuth();\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [comments, setComments] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    useEffect(() => {\r\n        getComments();\r\n    }, [userId]);\r\n    async function createComment(data) {\r\n        const comment = {\r\n            ...data,\r\n            _id: nanoid(),\r\n            pageId: userId,\r\n            created_at: Date.now(),\r\n            userId: currentUser._id\r\n        };\r\n        try {\r\n            const { content } = await commentService.createComment(comment);\r\n            setComments(prevState => [...prevState, content]);\r\n            console.log(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n        console.log(comment);\r\n    }\r\n    async function getComments() {\r\n        try {\r\n            const { content } = await commentService.getComments(userId);\r\n            setComments(content);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        } finally {\r\n            setLoading(false);\r\n        }\r\n    }\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    async function removeComment(id) {\r\n        try {\r\n            const { content } = await commentService.removeComment(id);\r\n            if (content === null) {\r\n                setComments((prevState) => prevState.filter((c) => c._id !== id));\r\n            }\r\n        } catch (error) {\r\n        errorCatcher(error);\r\n        }\r\n    }\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n    return (\r\n        <CommentsContext.Provider\r\n            value={{ comments, createComment, removeComment, isLoading }}\r\n        >\r\n            {children}\r\n        </CommentsContext.Provider>\r\n    );\r\n};\r\n\r\nCommentsProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import { orderBy } from \"lodash\";\r\nimport React from \"react\";\r\nimport CommentsList, { AddCommentForm } from \"../common/comments\";\r\nimport { useComments } from \"../../hooks/useComments\";\r\n\r\nconst Comments = () => {\r\n    const { createComment, comments, removeComment } = useComments();\r\n    const handleSubmit = (data) => {\r\n        createComment(data);\r\n        // api.comments\r\n        //     .add({ ...data, pageId: userId })\r\n        //     .then((data) => setComments([...comments, data]));\r\n    };\r\n    const handleRemoveComment = (id) => {\r\n        removeComment(id);\r\n        // api.comments.remove(id).then((id) => {\r\n        //     setComments(comments.filter((x) => x._id !== id));\r\n        // });\r\n    };\r\n    const sortedComments = orderBy(comments, [\"created_at\"], [\"desc\"]);\r\n    return (\r\n        <>\r\n            <div className=\"card mb-2\">\r\n                {\" \"}\r\n                <div className=\"card-body \">\r\n                    <AddCommentForm onSubmit={handleSubmit} />\r\n                </div>\r\n            </div>\r\n            {sortedComments.length > 0 && (\r\n                <div className=\"card mb-3\">\r\n                    <div className=\"card-body \">\r\n                        <h2>Comments</h2>\r\n                        <hr />\r\n                        <CommentsList\r\n                            comments={sortedComments}\r\n                            onRemove={handleRemoveComment}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            )}\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Comments;\r\n","import UserPage from \"./userPage\";\r\nexport default UserPage;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport UserCard from \"../../ui/userCard\";\r\nimport QualitiesCard from \"../../ui/qualitiesCard\";\r\nimport MeetingsCard from \"../../ui/meetingsCard\";\r\nimport Comments from \"../../ui/comments\";\r\nimport { useUser } from \"../../../hooks/useUsers\";\r\nimport { CommentsProvider } from \"../../../hooks/useComments\";\r\n\r\nconst UserPage = ({ userId }) => {\r\n    const { getUserById } = useUser();\r\n    const user = getUserById(userId);\r\n    if (user) {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row gutters-sm\">\r\n                    <div className=\"col-md-4 mb-3\">\r\n                        <UserCard user={user} />\r\n                        <QualitiesCard data={user.qualities} />\r\n                        <MeetingsCard value={user.completedMeetings} />\r\n                    </div>\r\n                    <div className=\"col-md-8\">\r\n                        <CommentsProvider>\r\n                            <Comments />\r\n                        </CommentsProvider>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    } else {\r\n        return <h1>Loading</h1>;\r\n    }\r\n};\r\n\r\nUserPage.propTypes = {\r\n    userId: PropTypes.string.isRequired\r\n};\r\n\r\nexport default UserPage;\r\n","import React from \"react\";\r\nimport _ from \"lodash\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst Pagination = ({ itemsCount, pageSize, onPageChange, currentPage }) => {\r\n    const pageCount = Math.ceil(itemsCount / pageSize);\r\n    if (pageCount === 1) return null;\r\n    const pages = _.range(1, pageCount + 1);\r\n    return (\r\n        <nav>\r\n            <ul className=\"pagination\">\r\n                {pages.map((page) => (\r\n                    <li\r\n                        className={\r\n                            \"page-item\" +\r\n                            (page === currentPage ? \" active\" : \"\")\r\n                        }\r\n                        key={\"page_\" + page}\r\n                    >\r\n                        <button\r\n                            className=\"page-link\"\r\n                            onClick={() => onPageChange(page)}\r\n                        >\r\n                            {page}\r\n                        </button>\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        </nav>\r\n    );\r\n};\r\nPagination.propTypes = {\r\n    itemsCount: PropTypes.number.isRequired,\r\n    pageSize: PropTypes.number.isRequired,\r\n    onPageChange: PropTypes.func.isRequired,\r\n    currentPage: PropTypes.number.isRequired\r\n};\r\n\r\nexport default Pagination;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst GroupList = ({\r\n    items,\r\n    valueProperty,\r\n    contentProperty,\r\n    onItemSelect,\r\n    selectedItem\r\n}) => {\r\n    if (!Array.isArray(items)) {\r\n        return (\r\n            <ul className=\"list-group\">\r\n                {Object.keys(items).map((item) => (\r\n                    <li\r\n                        key={items[item][valueProperty]}\r\n                        className={\r\n                            \"list-group-item\" +\r\n                            (items[item] === selectedItem ? \" active\" : \"\")\r\n                        }\r\n                        onClick={() => onItemSelect(items[item])}\r\n                        role=\"button\"\r\n                    >\r\n                        {items[item][contentProperty]}\r\n                    </li>\r\n                ))}\r\n            </ul>\r\n        );\r\n    }\r\n    return (\r\n        <ul className=\"list-group\">\r\n            {items.map((item) => (\r\n                <li\r\n                    key={item[valueProperty]}\r\n                    className={\r\n                        \"list-group-item\" +\r\n                        (item === selectedItem ? \" active\" : \"\")\r\n                    }\r\n                    onClick={() => onItemSelect(item)}\r\n                    role=\"button\"\r\n                >\r\n                    {item[contentProperty]}\r\n                </li>\r\n            ))}\r\n        </ul>\r\n    );\r\n};\r\nGroupList.defaultProps = {\r\n    valueProperty: \"_id\",\r\n    contentProperty: \"name\"\r\n};\r\nGroupList.propTypes = {\r\n    items: PropTypes.oneOfType([PropTypes.object, PropTypes.array]),\r\n    valueProperty: PropTypes.string.isRequired,\r\n    contentProperty: PropTypes.string.isRequired,\r\n    onItemSelect: PropTypes.func,\r\n    selectedItem: PropTypes.object\r\n};\r\n\r\nexport default GroupList;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst SearchStatus = ({ length }) => {\r\n    const renderPhrase = (number) => {\r\n        const lastOne = Number(number.toString().slice(-1));\r\n        if (number > 4 && number < 15) {\r\n            return \"человек тусанет\";\r\n        }\r\n        if (lastOne === 1) return \"человек тусанет\";\r\n        if ([2, 3, 4].indexOf(lastOne) >= 0) return \"человека тусанут\";\r\n        return \"человек тусанет\";\r\n    };\r\n    return (\r\n        <h2>\r\n            <span\r\n                className={\"badge \" + (length > 0 ? \"bg-primary\" : \"bg-danger\")}\r\n            >\r\n                {length > 0\r\n                    ? `${length + \" \" + renderPhrase(length)}   с тобой сегодня`\r\n                    : \"Никто с тобой не тусанет\"}\r\n            </span>\r\n        </h2>\r\n    );\r\n};\r\nSearchStatus.propTypes = {\r\n    length: PropTypes.number\r\n};\r\n\r\nexport default SearchStatus;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst BookMark = ({ status, ...rest }) => {\r\n    return (\r\n        <button {...rest}>\r\n            <i className={\"bi bi-bookmark\" + (status ? \"-heart-fill\" : \"\")}></i>\r\n        </button>\r\n    );\r\n};\r\nBookMark.propTypes = {\r\n    status: PropTypes.bool\r\n};\r\n\r\nexport default BookMark;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport _ from \"lodash\";\r\n\r\nconst TableBody = ({ data, columns }) => {\r\n    const renderContent = (item, column) => {\r\n        if (columns[column].component) {\r\n            const component = columns[column].component;\r\n            if (typeof component === \"function\") {\r\n                return component(item);\r\n            }\r\n            return component;\r\n        }\r\n        return _.get(item, columns[column].path);\r\n    };\r\n    return (\r\n        <tbody>\r\n            {data.map((item) => (\r\n                <tr key={item._id}>\r\n                    {Object.keys(columns).map((column) => (\r\n                        <td key={column}>{renderContent(item, column)}</td>\r\n                    ))}\r\n                </tr>\r\n            ))}\r\n        </tbody>\r\n    );\r\n};\r\n\r\nTableBody.propTypes = {\r\n    data: PropTypes.array.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableBody;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nconst TableHeader = ({ onSort, selectedSort, columns }) => {\r\n    const handleSort = (item) => {\r\n        if (selectedSort.path === item) {\r\n            onSort({\r\n                ...selectedSort,\r\n                order: selectedSort.order === \"asc\" ? \"desc\" : \"asc\"\r\n            });\r\n        } else {\r\n            onSort({ path: item, order: \"asc\" });\r\n        }\r\n    };\r\n    const rendeSortArrow = (selectedSort, currentPath) => {\r\n        if (selectedSort.path === currentPath) {\r\n            if (selectedSort.order === \"asc\") {\r\n                return <i className=\"bi bi-caret-down-fill\"></i>;\r\n            } else {\r\n                return <i className=\"bi bi-caret-up-fill\"></i>;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n\r\n    return (\r\n        <thead>\r\n            <tr>\r\n                {Object.keys(columns).map((column) => (\r\n                    <th\r\n                        key={column}\r\n                        onClick={\r\n                            columns[column].path\r\n                                ? () => handleSort(columns[column].path)\r\n                                : undefined\r\n                        }\r\n                        {...{ role: columns[column].path && \"button\" }}\r\n                        scope=\"col\"\r\n                    >\r\n                        {columns[column].name}{\" \"}\r\n                        {rendeSortArrow(selectedSort, columns[column].path)}\r\n                    </th>\r\n                ))}\r\n            </tr>\r\n        </thead>\r\n    );\r\n};\r\nTableHeader.propTypes = {\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    columns: PropTypes.object.isRequired\r\n};\r\n\r\nexport default TableHeader;\r\n","import Table from \"./table\";\r\nimport TableBody from \"./tableBody\";\r\nimport TableHeader from \"./tableHeader\";\r\n\r\nexport default Table;\r\n\r\nexport { TableBody, TableHeader };\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport TableBody from \"./tableBody\";\r\nimport TableHeader from \"./tableHeader\";\r\n\r\nconst Table = ({ onSort, selectedSort, columns, data, children }) => {\r\n    return (\r\n        <table className=\"table\">\r\n            {children || (\r\n                <>\r\n                    <TableHeader {...{ onSort, selectedSort, columns }} />\r\n                    <TableBody {...{ columns, data }} />\r\n                </>\r\n            )}\r\n        </table>\r\n    );\r\n};\r\nTable.propTypes = {\r\n    onSort: PropTypes.func,\r\n    selectedSort: PropTypes.object,\r\n    columns: PropTypes.object,\r\n    data: PropTypes.array,\r\n    children: PropTypes.array\r\n};\r\n\r\nexport default Table;\r\n","import httpService from \"./http.service\";\r\n\r\nconst professionEndpoint = \"profession/\";\r\n\r\nconst professionService = {\r\n    get: async () => {\r\n        const { data } = await httpService.get(professionEndpoint);\r\n        return data;\r\n    }\r\n};\r\nexport default professionService;\r\n","import React, { useContext, useEffect, useState } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ProfessionService from \"../../service/profession.service\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst ProfessionContext = React.createContext();\r\n\r\nexport const useProfessions = () => {\r\n    return useContext(ProfessionContext);\r\n};\r\n\r\nexport const ProfessionProvider = ({ children }) => {\r\n    const [isLoading, setLoading] = useState(true);\r\n    const [professions, setProfessions] = useState([]);\r\n    const [error, setError] = useState(null);\r\n    useEffect(() => {\r\n        if (error !== null) {\r\n            toast(error);\r\n            setError(null);\r\n        }\r\n    }, [error]);\r\n\r\n    useEffect(() => {\r\n        getProfessionsList();\r\n    }, []);\r\n    function errorCatcher(error) {\r\n        const { message } = error.response.data;\r\n        setError(message);\r\n    }\r\n    function getProfession(id) {\r\n        return professions.find((p) => p._id === id);\r\n    }\r\n\r\n    async function getProfessionsList() {\r\n        try {\r\n            const { content } = await ProfessionService.get();\r\n            setProfessions(content);\r\n            setLoading(false);\r\n        } catch (error) {\r\n            errorCatcher(error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <ProfessionContext.Provider\r\n            value={{ isLoading, professions, getProfession }}\r\n        >\r\n            {children}\r\n        </ProfessionContext.Provider>\r\n    );\r\n};\r\n\r\nProfessionProvider.propTypes = {\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ])\r\n};\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { useProfessions } from \"../../hooks/useProfession\";\r\n\r\nconst Profession = ({ id }) => {\r\n  const { isLoading, getProfession } = useProfessions();\r\n  const prof = getProfession(id);\r\n  if (!isLoading) {\r\n    return <p>{prof.name}</p>;\r\n  } else return \"Loading...\";\r\n};\r\nProfession.propTypes = {\r\n  id: PropTypes.string\r\n};\r\nexport default Profession;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BookMark from \"../common/bookmark\";\r\nimport Qualities from \"./qualities\";\r\nimport Table from \"../common/table\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Profession from \"./profession\";\r\n\r\nconst UserTable = ({\r\n    users,\r\n    onSort,\r\n    selectedSort,\r\n    onToggleBookMark,\r\n    ...rest\r\n}) => {\r\n    const columns = {\r\n        name: {\r\n            path: \"name\",\r\n            name: \"Имя\",\r\n            component: (user) => (\r\n                <Link to={`/users/${user._id}`}>{user.name}</Link>\r\n            )\r\n        },\r\n        qualities: {\r\n            name: \"Качества\",\r\n            component: (user) => <Qualities qualities={user.qualities} />\r\n        },\r\n        professions: { name: \"Профессия\", component: (user) => <Profession id={user.profession}/> },\r\n        completedMeetings: {\r\n            path: \"completedMeetings\",\r\n            name: \"Встретился, раз\"\r\n        },\r\n        rate: { path: \"rate\", name: \"Оценка\" },\r\n        bookmark: {\r\n            path: \"bookmark\",\r\n            name: \"Избранное\",\r\n            component: (user) => (\r\n                <BookMark\r\n                    status={user.bookmark}\r\n                    onClick={() => onToggleBookMark(user._id)}\r\n                />\r\n            )\r\n        }\r\n    };\r\n    return (\r\n        <Table\r\n            onSort={onSort}\r\n            selectedSort={selectedSort}\r\n            columns={columns}\r\n            data={users}\r\n        />\r\n    );\r\n};\r\n\r\nUserTable.propTypes = {\r\n    users: PropTypes.array.isRequired,\r\n    onSort: PropTypes.func.isRequired,\r\n    selectedSort: PropTypes.object.isRequired,\r\n    onToggleBookMark: PropTypes.func.isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import UsersListPage from \"./usersListPage\";\r\nexport default UsersListPage;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { paginate } from \"../../../utils/paginate\";\r\nimport Pagination from \"../../common/pagination\";\r\nimport GroupList from \"../../common/groupList\";\r\nimport SearchStatus from \"../../ui/searchStatus\";\r\nimport UserTable from \"../../ui/usersTable\";\r\nimport _ from \"lodash\";\r\nimport { useUser } from \"../../../hooks/useUsers\";\r\nimport { useProfessions } from \"../../../hooks/useProfession\";\r\nimport { useAuth } from \"../../../hooks/useAuth\";\r\n\r\nconst UsersListPage = () => {\r\n    const [currentPage, setCurrentPage] = useState(1);\r\n    const { currentUser } = useAuth();\r\n    const { isLoading: professionsLoading, professions } = useProfessions();\r\n    const [searchQuery, setSearchQuery] = useState(\"\");\r\n    const [selectedProf, setSelectedProf] = useState();\r\n    const [sortBy, setSortBy] = useState({ path: \"name\", order: \"asc\" });\r\n    const pageSize = 8;\r\n    const { users } = useUser();\r\n    const handleDelete = (userId) => {\r\n        // setUsers(users.filter((user) => user._id !== userId));\r\n        console.log(userId);\r\n    };\r\n    const handleToggleBookMark = (id) => {\r\n        const newArray = users.map((user) => {\r\n            if (user._id === id) {\r\n                return { ...user, bookmark: !user.bookmark };\r\n            }\r\n            return user;\r\n        });\r\n        // setUsers(newArray);\r\n        console.log(newArray);\r\n    };\r\n\r\n    useEffect(() => {\r\n        setCurrentPage(1);\r\n    }, [selectedProf, searchQuery]);\r\n\r\n    const handleProfessionSelect = (item) => {\r\n        if (searchQuery !== \"\") setSearchQuery(\"\");\r\n        setSelectedProf(item);\r\n    };\r\n    const handleSearchQuery = ({ target }) => {\r\n        setSelectedProf(undefined);\r\n        setSearchQuery(target.value);\r\n    };\r\n\r\n    const handlePageChange = (pageIndex) => {\r\n        setCurrentPage(pageIndex);\r\n    };\r\n    const handleSort = (item) => {\r\n        setSortBy(item);\r\n    };\r\n    function filterUsers(data) {\r\n        const filteredUsers = searchQuery\r\n            ? data.filter(\r\n                (user) =>\r\n                    user.name\r\n                        .toLowerCase()\r\n                        .indexOf(searchQuery.toLowerCase()) !== -1\r\n            )\r\n            : selectedProf\r\n                ? data.filter(\r\n                    (user) =>\r\n                        JSON.stringify(user.profession) ===\r\n                        JSON.stringify(selectedProf)\r\n                )\r\n                : data;\r\n        return filteredUsers.filter((user) => user._id !== currentUser._id);\r\n    }\r\n    const filteredUsers = filterUsers(users);\r\n\r\n    if (users) {\r\n        const count = filteredUsers.length;\r\n        const sortedUsers = _.orderBy(\r\n            filteredUsers,\r\n            [sortBy.path],\r\n            [sortBy.order]\r\n        );\r\n        const usersCrop = paginate(sortedUsers, currentPage, pageSize);\r\n        const clearFilter = () => {\r\n            setSelectedProf();\r\n        };\r\n\r\n        return (\r\n            <div className=\"d-flex\">\r\n                {professions && !professionsLoading && (\r\n                    <div className=\"d-flex flex-column flex-shrink-0 p-3\">\r\n                        <GroupList\r\n                            selectedItem={selectedProf}\r\n                            items={professions}\r\n                            onItemSelect={handleProfessionSelect}\r\n                        />\r\n                        <button\r\n                            className=\"btn btn-secondary mt-2\"\r\n                            onClick={clearFilter}\r\n                        >\r\n                            {\" \"}\r\n                            Очистить\r\n                        </button>\r\n                    </div>\r\n                )}\r\n                <div className=\"d-flex flex-column\">\r\n                    <SearchStatus length={count} />\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"searchQuery\"\r\n                        placeholder=\"Search...\"\r\n                        onChange={handleSearchQuery}\r\n                        value={searchQuery}\r\n                    />\r\n                    {count > 0 && (\r\n                        <UserTable\r\n                            users={usersCrop}\r\n                            onSort={handleSort}\r\n                            selectedSort={sortBy}\r\n                            onDelete={handleDelete}\r\n                            onToggleBookMark={handleToggleBookMark}\r\n                        />\r\n                    )}\r\n                    <div className=\"d-flex justify-content-center\">\r\n                        <Pagination\r\n                            itemsCount={count}\r\n                            pageSize={pageSize}\r\n                            currentPage={currentPage}\r\n                            onPageChange={handlePageChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    return \"loading...\";\r\n};\r\nUsersListPage.propTypes = {\r\n    users: PropTypes.array\r\n};\r\n\r\nexport default UsersListPage;\r\n","export function paginate(items, pageNumber, pageSize) {\r\n    const startIndex = (pageNumber - 1) * pageSize;\r\n    return [...items].splice(startIndex, pageSize);\r\n}\r\n","import React from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport EditUserPage from \"../components/page/editUserPage\";\r\nimport UserPage from \"../components/page/userPage\";\r\nimport UsersListPage from \"../components/page/usersListPage\";\r\nimport UserProvider from \"../hooks/useUsers\";\r\n\r\nconst Users = () => {\r\n    const params = useParams();\r\n    const { userId, edit } = params;\r\n    return (\r\n        <>\r\n            <UserProvider>\r\n                {userId ? (\r\n                    edit ? (\r\n                        <EditUserPage />\r\n                    ) : (\r\n                        <UserPage userId={userId} />\r\n                    )\r\n                ) : (\r\n                    <UsersListPage />\r\n                )}\r\n            </UserProvider>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Users;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst CheckBoxField = ({ name, value, onChange, children, error }) => {\r\n    const handleChange = () => {\r\n        onChange({ name: name, value: !value });\r\n    };\r\n    const getInputClasses = () => {\r\n        return \"form-check-input\" + (error ? \" is-invalid\" : \"\");\r\n    };\r\n    return (\r\n        <div className=\"form-check mb-4\">\r\n            <input\r\n                className={getInputClasses()}\r\n                type=\"checkbox\"\r\n                value=\"\"\r\n                id={name}\r\n                onChange={handleChange}\r\n                checked={value}\r\n            />\r\n            <label className=\"form-check-label\" htmlFor={name}>\r\n                {children}\r\n            </label>\r\n            {error && <div className=\"invalid-feedback\">{error}</div>}\r\n        </div>\r\n    );\r\n};\r\nCheckBoxField.propTypes = {\r\n    name: PropTypes.string,\r\n    value: PropTypes.bool,\r\n    onChange: PropTypes.func,\r\n    children: PropTypes.oneOfType([\r\n        PropTypes.arrayOf(PropTypes.node),\r\n        PropTypes.node\r\n    ]),\r\n    error: PropTypes.string\r\n};\r\n\r\nexport default CheckBoxField;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport TextField from \"../common/form/textField\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\n\r\nconst LoginForm = () => {\r\n    const history = useHistory();\r\n    console.log(history);\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        stayOn: false\r\n    });\r\n    const [errors, setErrors] = useState({});\r\n    const { signIn } = useAuth();\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязателен для заполнения\"\r\n            },\r\n            isCapitalSymbol: {\r\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать хотя бы одно число\"\r\n            },\r\n            min: {\r\n                message: \"Пароль должен состоять минимум из 8 символов\",\r\n                value: 8\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        try {\r\n            await signIn(data);\r\n            history.push(history.location.state ? history.location.state.from.pathname : \"/\");\r\n        } catch (error) {\r\n            setErrors(error);\r\n        }\r\n    };\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n            />\r\n            <TextField\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                error={errors.password}\r\n            />\r\n            <CheckBoxField\r\n                value={data.stayOn}\r\n                onChange={handleChange}\r\n                name=\"stayOn\"\r\n            >\r\n                Оставаться в системе\r\n            </CheckBoxField>\r\n            <button\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default LoginForm;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { validator } from \"../../utils/validator\";\r\nimport TextField from \"../common/form/textField\";\r\nimport SelectField from \"../common/form/selectField\";\r\nimport RadioField from \"../common/form/radioField\";\r\nimport MultiSelectField from \"../common/form/multiSelectField\";\r\nimport CheckBoxField from \"../common/form/checkBoxField\";\r\nimport { useQualities } from \"../../hooks/useQualities\";\r\nimport { useProfessions } from \"../../hooks/useProfession\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst RegisterForm = () => {\r\n    const history = useHistory();\r\n    const [data, setData] = useState({\r\n        email: \"\",\r\n        password: \"\",\r\n        profession: \"\",\r\n        sex: \"male\",\r\n        name: \"\",\r\n        qualities: [],\r\n        licence: false\r\n    });\r\n    const { signUp } = useAuth();\r\n    const { qualities } = useQualities();\r\n    const qualitiesList = qualities.map(q => ({\r\n        label: q.name,\r\n        value: q._id\r\n    }));\r\n    const { professions } = useProfessions();\r\n    const professionsList = professions.map(p => ({\r\n        label: p.name,\r\n        value: p._id\r\n    }));\r\n    const [errors, setErrors] = useState({});\r\n    const handleChange = (target) => {\r\n        setData((prevState) => ({\r\n            ...prevState,\r\n            [target.name]: target.value\r\n        }));\r\n    };\r\n    const validatorConfig = {\r\n        email: {\r\n            isRequired: {\r\n                message: \"Электронная почта обязательна для заполнения\"\r\n            },\r\n            isEmail: {\r\n                message: \"Email введен некорректно\"\r\n            }\r\n        },\r\n        name: {\r\n            isRequired: {\r\n                message: \"Имя обязательно для заполнения\"\r\n            },\r\n            min: {\r\n                message: \"Имя должно состоять минимум из 3 символов\",\r\n                value: 3\r\n            }\r\n        },\r\n        password: {\r\n            isRequired: {\r\n                message: \"Пароль обязателен для заполнения\"\r\n            },\r\n            isCapitalSymbol: {\r\n                message: \"Пароль должен содержать хотя бы одну заглавную букву\"\r\n            },\r\n            isContainDigit: {\r\n                message: \"Пароль должен содержать хотя бы одно число\"\r\n            },\r\n            min: {\r\n                message: \"Пароль должен состоять минимум из 8 символов\",\r\n                value: 8\r\n            }\r\n        },\r\n        profession: {\r\n            isRequired: {\r\n                message: \"Обязательно выберите вашу профессию\"\r\n            }\r\n        },\r\n        licence: {\r\n            isRequired: {\r\n                message:\r\n                    \"Вы не можете использовать наш сервис без подтверждения лицензионного соглашения\"\r\n            }\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        validate();\r\n    }, [data]);\r\n    const validate = () => {\r\n        const errors = validator(data, validatorConfig);\r\n        setErrors(errors);\r\n        return Object.keys(errors).length === 0;\r\n    };\r\n    const isValid = Object.keys(errors).length === 0;\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n        const isValid = validate();\r\n        if (!isValid) return;\r\n        const newData = { ...data, qualities: data.qualities.map(q => q.value) };\r\n        try {\r\n            await signUp(newData);\r\n            history.push(\"/\");\r\n        } catch (error) {\r\n            setErrors(error);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <TextField\r\n                label=\"Электронная почта\"\r\n                name=\"email\"\r\n                value={data.email}\r\n                onChange={handleChange}\r\n                error={errors.email}\r\n            />\r\n            <TextField\r\n                label=\"Имя\"\r\n                name=\"name\"\r\n                value={data.name}\r\n                onChange={handleChange}\r\n                error={errors.name}\r\n            />\r\n            <TextField\r\n                label=\"Пароль\"\r\n                type=\"password\"\r\n                name=\"password\"\r\n                value={data.password}\r\n                onChange={handleChange}\r\n                error={errors.password}\r\n            />\r\n            <SelectField\r\n                label=\"Выбери свою профессию\"\r\n                defaultOption=\"Choose...\"\r\n                options={professionsList}\r\n                name=\"profession\"\r\n                onChange={handleChange}\r\n                value={data.profession}\r\n                error={errors.profession}\r\n            />\r\n            <RadioField\r\n                options={[\r\n                    { name: \"Male\", value: \"male\" },\r\n                    { name: \"Female\", value: \"female\" },\r\n                    { name: \"Other\", value: \"other\" }\r\n                ]}\r\n                value={data.sex}\r\n                name=\"sex\"\r\n                onChange={handleChange}\r\n                label=\"Выберите ваш пол\"\r\n            />\r\n            <MultiSelectField\r\n                options={qualitiesList}\r\n                onChange={handleChange}\r\n                defaultValue={data.qualities}\r\n                name=\"qualities\"\r\n                label=\"Выберите ваши качества\"\r\n            />\r\n            <CheckBoxField\r\n                value={data.licence}\r\n                onChange={handleChange}\r\n                name=\"licence\"\r\n                error={errors.licence}\r\n            >\r\n                Подтвердить <a>лицензионное соглашение</a>\r\n            </CheckBoxField>\r\n            <button\r\n                className=\"btn btn-primary w-100 mx-auto\"\r\n                type=\"submit\"\r\n                disabled={!isValid}\r\n            >\r\n                Submit\r\n            </button>\r\n        </form>\r\n    );\r\n};\r\n\r\nexport default RegisterForm;\r\n","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport LoginForm from \"../components/ui/loginForm\";\r\nimport RegisterForm from \"../components/ui/registerForm\";\r\n\r\nconst Login = () => {\r\n    const { type } = useParams();\r\n    const [formType, setFormType] = useState(\r\n        type === \"register\" ? type : \"login\"\r\n    );\r\n    const toggleFormType = (params) => {\r\n        setFormType((prevState) =>\r\n            prevState === \"register\" ? \"login\" : \"register\"\r\n        );\r\n    };\r\n\r\n    return (\r\n        <div className=\"container mt-5\">\r\n            <div className=\"row\">\r\n                <div className=\"col-md-6 offset-md-3 shadow p-4\">\r\n                    {formType === \"register\" ? (\r\n                        <>\r\n                            <h3 className=\"mb-4\">Register</h3>\r\n                            <RegisterForm />\r\n                            <p>\r\n                                Already have account?{\" \"}\r\n                                <a role=\"button\" onClick={toggleFormType}>\r\n                                    {\" \"}\r\n                                    Sign In\r\n                                </a>\r\n                            </p>\r\n                        </>\r\n                    ) : (\r\n                        <>\r\n                            <h3 className=\"mb-4\">Login</h3>\r\n                            <LoginForm />\r\n                            <p>\r\n                                Dont have account?{\" \"}\r\n                                <a role=\"button\" onClick={toggleFormType}>\r\n                                    {\" \"}\r\n                                    Sign Up\r\n                                </a>\r\n                            </p>\r\n                        </>\r\n                    )}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;\r\n","import { useEffect, useState } from \"react\";\r\nimport professions from \"../mockData/professions.json\";\r\nimport qualities from \"../mockData/qualities.json\";\r\nimport users from \"../mockData/users.json\";\r\nimport httpService from \"../../service/http.service\";\r\n\r\nconst useMockData = () => {\r\n    const statusConst = {\r\n        idle: \"Not started\",\r\n        pending: \"In process\",\r\n        success: \"Ready\",\r\n        error: \"Error occured\"\r\n    };\r\n    const [error, setError] = useState(null);\r\n    const [status, setStatus] = useState(statusConst.idle);\r\n    const [progress, setProgress] = useState(0);\r\n    const [count, setCount] = useState(0);\r\n    const summCount = professions.length + qualities.length + users.length;\r\n    const incrementCount = () => {\r\n      setCount((prevState) => prevState + 1);\r\n    };\r\n    const updateProgress = () => {\r\n        if (count !== 0 && status === statusConst.idle) {\r\n            setStatus(statusConst.pending);\r\n        }\r\n        const newProgress = Math.floor((count / summCount) * 100);\r\n        if (progress < newProgress) {\r\n            setProgress(() => newProgress);\r\n        }\r\n        if (newProgress === 100) {\r\n            setStatus(statusConst.success);\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        updateProgress();\r\n    }, [count]);\r\n    async function initialize() {\r\n        try {\r\n            for (const prof of professions) {\r\n                await httpService.put(`profession/${prof._id}`, prof);\r\n                incrementCount();\r\n            }\r\n            for (const user of users) {\r\n                await httpService.put(`user/${user._id}`, user);\r\n                incrementCount();\r\n            }\r\n            for (const quality of qualities) {\r\n                await httpService.put(`quality/${quality._id}`, quality);\r\n                incrementCount();\r\n            }\r\n        } catch (error) {\r\n            setError(error);\r\n            setStatus(statusConst.error);\r\n        }\r\n    }\r\n\r\n    return { error, initialize, progress, status };\r\n};\r\n\r\nexport default useMockData;\r\n","import React from \"react\";\r\nimport useMockData from \"../utils/mockData\";\r\n\r\nconst Main = () => {\r\n    const { error, initialize, progress, status } = useMockData();\r\n    const handleClick = () => {\r\n      initialize();\r\n    };\r\n    return <div className=\"container mt-5\"><h1> Main Page</h1>\r\n    <h3>Инициализация данных в Firebase</h3>\r\n        <ul>\r\n            <li>Status: {status}</li>\r\n            <li>Progress: {progress}%</li>\r\n            {error && <li>Error: {error}</li>}\r\n        </ul>\r\n        <button className=\"btn btn-primary\" onClick={handleClick}>Инициализирировать</button>\r\n    </div>;\r\n};\r\n\r\nexport default Main;\r\n","import React, { useState } from \"react\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst NavProfile = () => {\r\n  const { currentUser } = useAuth();\r\n  const [isOpen, setOpen] = useState(false);\r\n  const toggleMenu = () => {\r\n    setOpen(prevState => !prevState);\r\n  };\r\n  return <div className=\"dropdown\" onClick={toggleMenu}>\r\n    <div className=\"btn dropdown-toggle d-flex align-items-center\">\r\n      <div className=\"me-2\">{currentUser.name}</div>\r\n      <img src={currentUser.image}\r\n           className=\"img-responsive rounded-circle\"\r\n           alt=\"avatar\"\r\n           height=\"40\"\r\n           />\r\n    </div>\r\n    <div className={`w-100 dropdown-menu ${isOpen ? \"show\" : \"\"}`}>\r\n      <Link to={`/users/${currentUser._id}`} className=\"dropdown-item \">Profile</Link>\r\n      <Link to=\"/logout\" className=\"dropdown-item \">Log Out</Link>\r\n    </div>\r\n  </div>;\r\n};\r\n\r\nexport default NavProfile;\r\n","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth } from \"../../hooks/useAuth\";\r\nimport NavProfile from \"./navProfile\";\r\n\r\nconst NavBar = () => {\r\n    const { currentUser } = useAuth();\r\n    return (\r\n        <nav className=\"navbar bg-light mb-3\">\r\n            <div className=\"container-fluid\">\r\n                <ul className=\"nav\">\r\n                    <li className=\"nav-item\">\r\n                        <Link className=\"nav-link\" aria-current=\"page\" to=\"/\">\r\n                            Main\r\n                        </Link>\r\n                    </li>\r\n                    {currentUser && (\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" aria-current=\"page\" to=\"/users\">\r\n                                Users\r\n                            </Link>\r\n                        </li>\r\n                    )}\r\n                </ul>\r\n                <div className=\"d-flex\">\r\n                    {currentUser ? <NavProfile /> : <Link className=\"nav-link\" aria-current=\"page\" to=\"/login\">\r\n                        Login\r\n                    </Link>}\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    );\r\n};\r\n\r\nexport default NavBar;\r\n","import React from \"react\";\r\nimport { useAuth } from \"./hooks/useAuth\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Redirect, Route } from \"react-router-dom\";\r\n\r\nconst ProtectedRoute = ({ component: Component, children, ...rest }) => {\r\n    const { currentUser } = useAuth();\r\n    return (\r\n        <Route\r\n            {...rest}\r\n            render={(props) => {\r\n                if (!currentUser) {\r\n                    return <Redirect to={{\r\n                        pathname: \"/login\",\r\n                        state: { from: props.location }\r\n                    }}/>;\r\n                }\r\n                return Component ? <Component {...props}/> : children;\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nProtectedRoute.propTypes = {\r\n    component: PropTypes.func,\r\n    children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n    location: PropTypes.object\r\n};\r\n\r\nexport default ProtectedRoute;\r\n","import React, { useEffect } from \"react\";\r\nimport { useAuth } from \"../hooks/useAuth\";\r\n\r\nconst LogOut = () => {\r\n  const { logOut } = useAuth();\r\n  useEffect(() => {\r\n    logOut();\r\n  }, []);\r\n  return <h1>Loading..</h1>;\r\n};\r\n\r\nexport default LogOut;\r\n","import React from \"react\";\r\nimport { Route, Switch, Redirect } from \"react-router-dom\";\r\nimport Users from \"./layouts/users\";\r\nimport Login from \"./layouts/login\";\r\nimport Main from \"./layouts/main\";\r\nimport NavBar from \"./components/ui/navBar\";\r\nimport { ToastContainer } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { ProfessionProvider } from \"./hooks/useProfession\";\r\nimport { QualitiesProvider } from \"./hooks/useQualities\";\r\nimport AuthProvider from \"./hooks/useAuth\";\r\nimport ProtectedRoute from \"./protectedRoute\";\r\nimport LogOut from \"./layouts/logOut\";\r\n\r\nfunction App() {\r\n    return (\r\n        <div>\r\n            <AuthProvider>\r\n            <NavBar />\r\n            <ProfessionProvider>\r\n                <QualitiesProvider>\r\n                    <Switch>\r\n                        <ProtectedRoute path=\"/users/:userId?/:edit?\" component={Users} />\r\n                        <Route path=\"/login/:type?\" component={Login} />\r\n                        <Route path=\"/logout\" component={LogOut} />\r\n                        <Route path=\"/\" exact component={Main} />\r\n                        <Redirect to=\"/\" />\r\n                    </Switch>\r\n                </QualitiesProvider>\r\n            </ProfessionProvider>\r\n            </AuthProvider>\r\n            <ToastContainer />\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport App from \"./app/App\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <BrowserRouter>\r\n            <App />\r\n        </BrowserRouter>\r\n    </React.StrictMode>,\r\n    document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}